769950877c788adddd012b1eecdb565c
"use strict";

var _interopRequireDefault = require("/home/anushkai/Desktop/Training/code/redux/fullStack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _objectSpread2 = _interopRequireDefault(require("/home/anushkai/Desktop/Training/code/redux/fullStack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread"));

var _types = require("../actions/types");

const initialState = {
  cartId: "",
  cartItems: [],
  cartLoading: false,
  totalAmount: 0
};

function _default(state = initialState, action) {
  let detail;

  switch (action.type) {
    case _types.GET_CART:
      detail = (0, _objectSpread2.default)({}, state, {
        cartItems: action.payload.items,
        ///sure naaa
        cartLoading: false
      });
      break;

    case _types.DELETE_FROM_CART:
      detail = (0, _objectSpread2.default)({}, state, {
        cartItems: state.cartItems.filter(item => item._id !== action.payload)
      });
      break;

    case _types.ADD_TO_CART:
      detail = (0, _objectSpread2.default)({}, state, {
        cartItems: action.payload.items
      });
      break;

    case _types.CART_LOADING:
      detail = (0, _objectSpread2.default)({}, state, {
        cartLoading: true
      });
      break;

    case _types.UPDATE_COUNT:
      let objIndex = state.cartItems.findIndex(obj => {
        return obj._id === action.payload.idd;
      });
      let a = Object.assign([], state.cartItems);
      a[objIndex].count = action.payload.countt;
      detail = (0, _objectSpread2.default)({}, state, {
        cartItems: a
      });
      break;

    case _types.CLEAR_CART:
      detail = (0, _objectSpread2.default)({}, state, {
        cartItems: []
      });
      break;

    case _types.SET_CART_ID:
      detail = (0, _objectSpread2.default)({}, state, {
        cartId: action.payload
      });
      break;

    default:
      return state;
  }

  detail.totalAmount = 0;

  if (detail.cartItems.length > 1) {
    var g = detail.cartItems.map(item => {
      detail.totalAmount = detail.totalAmount + item.count * item.itm.price;
      return null;
    });
  } else if (detail.cartItems.length === 1) {
    detail.totalAmount = detail.cartItems[0].count * detail.cartItems[0].itm.price;
  } else {
    detail.totalAmount = 0;
  }

  return detail;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcnRSZWR1Y2VyLmpzIl0sIm5hbWVzIjpbImluaXRpYWxTdGF0ZSIsImNhcnRJZCIsImNhcnRJdGVtcyIsImNhcnRMb2FkaW5nIiwidG90YWxBbW91bnQiLCJzdGF0ZSIsImFjdGlvbiIsImRldGFpbCIsInR5cGUiLCJHRVRfQ0FSVCIsInBheWxvYWQiLCJpdGVtcyIsIkRFTEVURV9GUk9NX0NBUlQiLCJmaWx0ZXIiLCJpdGVtIiwiX2lkIiwiQUREX1RPX0NBUlQiLCJDQVJUX0xPQURJTkciLCJVUERBVEVfQ09VTlQiLCJvYmpJbmRleCIsImZpbmRJbmRleCIsIm9iaiIsImlkZCIsImEiLCJPYmplY3QiLCJhc3NpZ24iLCJjb3VudCIsImNvdW50dCIsIkNMRUFSX0NBUlQiLCJTRVRfQ0FSVF9JRCIsImxlbmd0aCIsImciLCJtYXAiLCJpdG0iLCJwcmljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFVQSxNQUFNQSxZQUFZLEdBQUc7QUFDbkJDLEVBQUFBLE1BQU0sRUFBRSxFQURXO0FBRW5CQyxFQUFBQSxTQUFTLEVBQUUsRUFGUTtBQUduQkMsRUFBQUEsV0FBVyxFQUFFLEtBSE07QUFJbkJDLEVBQUFBLFdBQVcsRUFBRTtBQUpNLENBQXJCOztBQU9lLGtCQUFTQyxLQUFLLEdBQUdMLFlBQWpCLEVBQStCTSxNQUEvQixFQUF1QztBQUNwRCxNQUFJQyxNQUFKOztBQUNBLFVBQVFELE1BQU0sQ0FBQ0UsSUFBZjtBQUNFLFNBQUtDLGVBQUw7QUFDRUYsTUFBQUEsTUFBTSxtQ0FDREYsS0FEQztBQUVKSCxRQUFBQSxTQUFTLEVBQUVJLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlQyxLQUZ0QjtBQUU2QjtBQUNqQ1IsUUFBQUEsV0FBVyxFQUFFO0FBSFQsUUFBTjtBQUtBOztBQUNGLFNBQUtTLHVCQUFMO0FBQ0VMLE1BQUFBLE1BQU0sbUNBQ0RGLEtBREM7QUFFSkgsUUFBQUEsU0FBUyxFQUFFRyxLQUFLLENBQUNILFNBQU4sQ0FBZ0JXLE1BQWhCLENBQXVCQyxJQUFJLElBQUlBLElBQUksQ0FBQ0MsR0FBTCxLQUFhVCxNQUFNLENBQUNJLE9BQW5EO0FBRlAsUUFBTjtBQUlBOztBQUNGLFNBQUtNLGtCQUFMO0FBQ0VULE1BQUFBLE1BQU0sbUNBQ0RGLEtBREM7QUFFSkgsUUFBQUEsU0FBUyxFQUFFSSxNQUFNLENBQUNJLE9BQVAsQ0FBZUM7QUFGdEIsUUFBTjtBQUlBOztBQUNGLFNBQUtNLG1CQUFMO0FBQ0VWLE1BQUFBLE1BQU0sbUNBQ0RGLEtBREM7QUFFSkYsUUFBQUEsV0FBVyxFQUFFO0FBRlQsUUFBTjtBQUlBOztBQUNGLFNBQUtlLG1CQUFMO0FBQ0UsVUFBSUMsUUFBUSxHQUFHZCxLQUFLLENBQUNILFNBQU4sQ0FBZ0JrQixTQUFoQixDQUEwQkMsR0FBRyxJQUFJO0FBQzlDLGVBQU9BLEdBQUcsQ0FBQ04sR0FBSixLQUFZVCxNQUFNLENBQUNJLE9BQVAsQ0FBZVksR0FBbEM7QUFDRCxPQUZjLENBQWY7QUFHQSxVQUFJQyxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JwQixLQUFLLENBQUNILFNBQXhCLENBQVI7QUFDQXFCLE1BQUFBLENBQUMsQ0FBQ0osUUFBRCxDQUFELENBQVlPLEtBQVosR0FBb0JwQixNQUFNLENBQUNJLE9BQVAsQ0FBZWlCLE1BQW5DO0FBQ0FwQixNQUFBQSxNQUFNLG1DQUNERixLQURDO0FBRUpILFFBQUFBLFNBQVMsRUFBRXFCO0FBRlAsUUFBTjtBQUlBOztBQUNGLFNBQUtLLGlCQUFMO0FBQ0VyQixNQUFBQSxNQUFNLG1DQUNERixLQURDO0FBRUpILFFBQUFBLFNBQVMsRUFBRTtBQUZQLFFBQU47QUFJQTs7QUFDRixTQUFLMkIsa0JBQUw7QUFDRXRCLE1BQUFBLE1BQU0sbUNBQ0RGLEtBREM7QUFFSkosUUFBQUEsTUFBTSxFQUFFSyxNQUFNLENBQUNJO0FBRlgsUUFBTjtBQUlBOztBQUNGO0FBQ0UsYUFBT0wsS0FBUDtBQWxESjs7QUFvREFFLEVBQUFBLE1BQU0sQ0FBQ0gsV0FBUCxHQUFxQixDQUFyQjs7QUFDQSxNQUFJRyxNQUFNLENBQUNMLFNBQVAsQ0FBaUI0QixNQUFqQixHQUEwQixDQUE5QixFQUFpQztBQUMvQixRQUFJQyxDQUFDLEdBQUd4QixNQUFNLENBQUNMLFNBQVAsQ0FBaUI4QixHQUFqQixDQUFxQmxCLElBQUksSUFBSTtBQUNuQ1AsTUFBQUEsTUFBTSxDQUFDSCxXQUFQLEdBQXFCRyxNQUFNLENBQUNILFdBQVAsR0FBcUJVLElBQUksQ0FBQ1ksS0FBTCxHQUFhWixJQUFJLENBQUNtQixHQUFMLENBQVNDLEtBQWhFO0FBQ0EsYUFBTyxJQUFQO0FBQ0QsS0FITyxDQUFSO0FBSUQsR0FMRCxNQUtPLElBQUkzQixNQUFNLENBQUNMLFNBQVAsQ0FBaUI0QixNQUFqQixLQUE0QixDQUFoQyxFQUFtQztBQUN4Q3ZCLElBQUFBLE1BQU0sQ0FBQ0gsV0FBUCxHQUNFRyxNQUFNLENBQUNMLFNBQVAsQ0FBaUIsQ0FBakIsRUFBb0J3QixLQUFwQixHQUE0Qm5CLE1BQU0sQ0FBQ0wsU0FBUCxDQUFpQixDQUFqQixFQUFvQitCLEdBQXBCLENBQXdCQyxLQUR0RDtBQUVELEdBSE0sTUFHQTtBQUNMM0IsSUFBQUEsTUFBTSxDQUFDSCxXQUFQLEdBQXFCLENBQXJCO0FBQ0Q7O0FBQ0QsU0FBT0csTUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgR0VUX0NBUlQsXG4gIEFERF9UT19DQVJULFxuICBERUxFVEVfRlJPTV9DQVJULFxuICBDQVJUX0xPQURJTkcsXG4gIFVQREFURV9DT1VOVCxcbiAgQ0xFQVJfQ0FSVCxcbiAgU0VUX0NBUlRfSURcbn0gZnJvbSBcIi4uL2FjdGlvbnMvdHlwZXNcIjtcblxuY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICBjYXJ0SWQ6IFwiXCIsXG4gIGNhcnRJdGVtczogW10sXG4gIGNhcnRMb2FkaW5nOiBmYWxzZSxcbiAgdG90YWxBbW91bnQ6IDBcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pIHtcbiAgbGV0IGRldGFpbDtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgR0VUX0NBUlQ6XG4gICAgICBkZXRhaWwgPSB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBjYXJ0SXRlbXM6IGFjdGlvbi5wYXlsb2FkLml0ZW1zLCAvLy9zdXJlIG5hYWFcbiAgICAgICAgY2FydExvYWRpbmc6IGZhbHNlXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBERUxFVEVfRlJPTV9DQVJUOlxuICAgICAgZGV0YWlsID0ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgY2FydEl0ZW1zOiBzdGF0ZS5jYXJ0SXRlbXMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5faWQgIT09IGFjdGlvbi5wYXlsb2FkKVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgQUREX1RPX0NBUlQ6XG4gICAgICBkZXRhaWwgPSB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBjYXJ0SXRlbXM6IGFjdGlvbi5wYXlsb2FkLml0ZW1zXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBDQVJUX0xPQURJTkc6XG4gICAgICBkZXRhaWwgPSB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBjYXJ0TG9hZGluZzogdHJ1ZVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgVVBEQVRFX0NPVU5UOlxuICAgICAgbGV0IG9iakluZGV4ID0gc3RhdGUuY2FydEl0ZW1zLmZpbmRJbmRleChvYmogPT4ge1xuICAgICAgICByZXR1cm4gb2JqLl9pZCA9PT0gYWN0aW9uLnBheWxvYWQuaWRkO1xuICAgICAgfSk7XG4gICAgICBsZXQgYSA9IE9iamVjdC5hc3NpZ24oW10sIHN0YXRlLmNhcnRJdGVtcyk7XG4gICAgICBhW29iakluZGV4XS5jb3VudCA9IGFjdGlvbi5wYXlsb2FkLmNvdW50dDtcbiAgICAgIGRldGFpbCA9IHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGNhcnRJdGVtczogYVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgQ0xFQVJfQ0FSVDpcbiAgICAgIGRldGFpbCA9IHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGNhcnRJdGVtczogW11cbiAgICAgIH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIFNFVF9DQVJUX0lEOlxuICAgICAgZGV0YWlsID0ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgY2FydElkOiBhY3Rpb24ucGF5bG9hZFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbiAgZGV0YWlsLnRvdGFsQW1vdW50ID0gMDtcbiAgaWYgKGRldGFpbC5jYXJ0SXRlbXMubGVuZ3RoID4gMSkge1xuICAgIHZhciBnID0gZGV0YWlsLmNhcnRJdGVtcy5tYXAoaXRlbSA9PiB7XG4gICAgICBkZXRhaWwudG90YWxBbW91bnQgPSBkZXRhaWwudG90YWxBbW91bnQgKyBpdGVtLmNvdW50ICogaXRlbS5pdG0ucHJpY2U7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcbiAgfSBlbHNlIGlmIChkZXRhaWwuY2FydEl0ZW1zLmxlbmd0aCA9PT0gMSkge1xuICAgIGRldGFpbC50b3RhbEFtb3VudCA9XG4gICAgICBkZXRhaWwuY2FydEl0ZW1zWzBdLmNvdW50ICogZGV0YWlsLmNhcnRJdGVtc1swXS5pdG0ucHJpY2U7XG4gIH0gZWxzZSB7XG4gICAgZGV0YWlsLnRvdGFsQW1vdW50ID0gMDtcbiAgfVxuICByZXR1cm4gZGV0YWlsO1xufVxuIl19
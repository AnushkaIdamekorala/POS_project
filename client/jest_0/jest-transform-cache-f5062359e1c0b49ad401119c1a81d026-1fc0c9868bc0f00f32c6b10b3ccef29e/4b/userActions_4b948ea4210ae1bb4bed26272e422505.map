{"version":3,"sources":["userActions.js"],"names":["loginUser","details","dispatch","axios","post","then","res","type","USER_LOGIN","payload","data","catch","USER_NOT_FOUND","userRefresh","USER_REFRESH","signOutUser","get","USER_SIGN_OUT","checkAuth","AUTH_CHECK","success","userCarts","USER_CARTS","info","createCart","table","CREATE_CART","removeCart","id","delete","REMOVE_CART","signupUser","USER_SIGNUP","INVALID_EMAIL"],"mappings":";;;;;;;;;AAAA;;AACA;;AAaO,MAAMA,SAAS,GAAGC,OAAO,IAAIC,QAAQ,IAAI;AAC9C,SAAOC,eACJC,IADI,CACC,iBADD,EACoBH,OADpB,EAEJI,IAFI,CAECC,GAAG,IACPJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEC,iBADC;AAEPC,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,GAAD,CAHL,EAQJC,KARI,CAQEL,GAAG,IACRJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEK,qBADC;AAEPH,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,GAAD,CATL,CAAP;AAcD,CAfM;;;;AAiBA,MAAMG,WAAW,GAAG,MAAMX,QAAQ,IAAI;AAC3CA,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEO;AADC,GAAD,CAAR;AAGD,CAJM;;;;AAMA,MAAMC,WAAW,GAAG,MAAMb,QAAQ,IAAI;AAC3C,SAAOC,eAAMa,GAAN,CAAU,mBAAV,EAA+BX,IAA/B,CAAoCC,GAAG,IAC5CJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEU,oBADC;AAEPR,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,GAAD,CADH,CAAP;AAMD,CAPM;;;;AASA,MAAMQ,SAAS,GAAG,MAAMhB,QAAQ,IAAI;AACzC,SAAOC,eAAMC,IAAN,CAAW,qBAAX,EAAkCC,IAAlC,CAAuCC,GAAG,IAC/CJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEY,iBADC;AAEPV,IAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASU;AAFX,GAAD,CADH,CAAP;AAMD,CAPM;;;;AASA,MAAMC,SAAS,GAAG,MAAMnB,QAAQ,IAAI;AACzC,SAAOC,eAAMa,GAAN,CAAU,gBAAV,EAA4BX,IAA5B,CAAiCC,GAAG,IACzCJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEe,iBADC;AAEPb,IAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASa;AAFX,GAAD,CADH,CAAP;AAMD,CAPM;;;;AASA,MAAMC,UAAU,GAAGC,KAAK,IAAIvB,QAAQ,IAAI;AAC7C,SAAOC,eAAMa,GAAN,CAAW,oBAAmBS,KAAM,EAApC,EAAuCpB,IAAvC,CAA4CC,GAAG,IACpDJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEmB,kBADC;AAEPjB,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,GAAD,CADH,CAAP;AAMD,CAPM;;;;AASA,MAAMiB,UAAU,GAAGC,EAAE,IAAI1B,QAAQ,IAAI;AAC1C,SAAOC,eAAM0B,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,EAA2CvB,IAA3C,CAAgDC,GAAG,IAAI;AAC5D,QAAIA,GAAG,CAACI,IAAJ,CAASU,OAAb,EAAsB;AACpBlB,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEuB,kBADC;AAEPrB,QAAAA,OAAO,EAAEmB;AAFF,OAAD,CAAR;AAID,KALD,MAKO,CACN;AACF,GARM,CAAP;AASD,CAVM;;;;AAYA,MAAMG,UAAU,GAAG9B,OAAO,IAAIC,QAAQ,IAAI;AAC/C,SAAOC,eACJC,IADI,CACC,kBADD,EACqBH,OADrB,EAEJI,IAFI,CAECC,GAAG,IACPJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEyB,kBADC;AAEPvB,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,GAAD,CAHL,EAQJC,KARI,CAQEL,GAAG,IACRJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAE0B;AADC,GAAD,CATL,CAAP;AAaD,CAdM;AAgBP","sourcesContent":["import axios from \"axios\";\nimport {\n  USER_LOGIN,\n  USER_NOT_FOUND,\n  USER_REFRESH,\n  USER_SIGN_OUT,\n  AUTH_CHECK,\n  USER_CARTS,\n  CREATE_CART,\n  USER_SIGNUP,\n  INVALID_EMAIL,\n  REMOVE_CART\n} from \"./types\";\n\nexport const loginUser = details => dispatch => {\n  return axios\n    .post(\"/api/user/login\", details)\n    .then(res =>\n      dispatch({\n        type: USER_LOGIN,\n        payload: res.data\n      })\n    )\n    .catch(res =>\n      dispatch({\n        type: USER_NOT_FOUND,\n        payload: res.data\n      })\n    );\n};\n\nexport const userRefresh = () => dispatch => {\n  dispatch({\n    type: USER_REFRESH\n  });\n};\n\nexport const signOutUser = () => dispatch => {\n  return axios.get(\"/api/user/signout\").then(res =>\n    dispatch({\n      type: USER_SIGN_OUT,\n      payload: res.data\n    })\n  );\n};\n\nexport const checkAuth = () => dispatch => {\n  return axios.post(\"/api/user/checkAuth\").then(res =>\n    dispatch({\n      type: AUTH_CHECK,\n      payload: res.data.success\n    })\n  );\n};\n\nexport const userCarts = () => dispatch => {\n  return axios.get(\"/api/user/what\").then(res =>\n    dispatch({\n      type: USER_CARTS,\n      payload: res.data.info\n    })\n  );\n};\n\nexport const createCart = table => dispatch => {\n  return axios.get(`/api/user/create/${table}`).then(res =>\n    dispatch({\n      type: CREATE_CART,\n      payload: res.data\n    })\n  );\n};\n\nexport const removeCart = id => dispatch => {\n  return axios.delete(`/api/user/removecart/${id}`).then(res => {\n    if (res.data.success) {\n      dispatch({\n        type: REMOVE_CART,\n        payload: id\n      });\n    } else {\n    }\n  });\n};\n\nexport const signupUser = details => dispatch => {\n  return axios\n    .post(\"/api/user/signup\", details)\n    .then(res =>\n      dispatch({\n        type: USER_SIGNUP,\n        payload: res.data\n      })\n    )\n    .catch(res =>\n      dispatch({\n        type: INVALID_EMAIL\n      })\n    );\n};\n\n/*\n{\n      console.log(res);\n      if (res.data.message === \"Mail exists\") {\n        dispatch({\n          type: MAIL_EXIST\n        });\n      } else {\n        dispatch({\n        type: INVALID_EMAIL\n      })\n       \n      }\n    }*/\n"]}
{"version":3,"sources":["component.test.js"],"names":["middlewares","thunk","Enzyme","configure","adapter","Adapter","describe","mockStore","store","loginUser","sinon","spy","userCarts","initialState","auth","email","password","beforeEach","it","wrapper","expect","toMatchSnapshot","find","simulate"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;AAEA,MAAMA,WAAW,GAAG,CAACC,mBAAD,CAApB;;AAEAC,gBAAOC,SAAP,CAAiB;AAAEC,EAAAA,OAAO,EAAE,IAAIC,2BAAJ;AAAX,CAAjB;;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BA,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChC,UAAMC,SAAS,GAAG,6BAAeP,WAAf,CAAlB;AACA,QAAIQ,KAAJ;;AACA,UAAMC,SAAS,GAAGC,eAAMC,GAAN,EAAlB;;AACA,UAAMC,SAAS,GAAGF,eAAMC,GAAN,EAAlB;;AAEA,UAAME,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,QAAQ,EAAE;AAFN,OADa;AAKnBP,MAAAA,SALmB;AAMnBG,MAAAA;AANmB,KAArB;AASAK,IAAAA,UAAU,CAAC,MAAM;AACfT,MAAAA,KAAK,GAAGD,SAAS,CAACM,YAAD,CAAjB;AACD,KAFS,CAAV;AAGAK,IAAAA,EAAE,CAAC,sCAAD,EAAyC,MAAM;AAC/C;;;AAGA,YAAMC,OAAO,GAAG,mBACd,6BAAC,oBAAD;AAAU,QAAA,KAAK,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,6BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADc,CAAhB;AAOAY,MAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACD,KAZC,CAAF;AAcAH,IAAAA,EAAE,CAAC,wBAAD,EAA2B,MAAM;AACjC,YAAMC,OAAO,GAAG,mBACd,6BAAC,oBAAD;AAAU,QAAA,KAAK,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,6BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADc,CAAhB,CADiC,CAQjC;;AACAW,MAAAA,OAAO,CAACG,IAAR,CAAa,YAAb,EAA2BC,QAA3B,CAAoC,OAApC,EATiC,CAUjC;AACA;;AACAH,MAAAA,MAAM,CAACD,OAAO,CAACG,IAAR,CAAa,eAAb,EAA8BC,QAA9B,CAAuC,QAAvC,CAAD,CAAN;AACD,KAbC,CAAF;AAcD,GA9CO,CAAR;AA+CD,CAhDO,CAAR","sourcesContent":["import React from \"react\";\nimport Enzyme, { shallow, mount } from \"enzyme\";\nimport Adapter from \"enzyme-adapter-react-16\";\nimport Login from \"../Login\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport sinon from \"sinon\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport configureStore from \"redux-mock-store\";\n\nconst middlewares = [thunk];\n\nEnzyme.configure({ adapter: new Adapter() });\n\ndescribe(\"components\", () => {\n  describe(\"Login component\", () => {\n    const mockStore = configureStore(middlewares);\n    let store;\n    const loginUser = sinon.spy();\n    const userCarts = sinon.spy();\n\n    const initialState = {\n      auth: {\n        email: \"\",\n        password: \"\"\n      },\n      loginUser,\n      userCarts\n    };\n\n    beforeEach(() => {\n      store = mockStore(initialState);\n    });\n    it(\"should render self and subcomponents\", () => {\n      /* const props = {\n        login: jest.fn()\n      }; */\n      const wrapper = mount(\n        <Provider store={store}>\n          <Router>\n            <Login />\n          </Router>\n        </Provider>\n      );\n      expect(wrapper).toMatchSnapshot();\n    });\n\n    it(\"simulate button action\", () => {\n      const wrapper = mount(\n        <Provider store={store}>\n          <Router>\n            <Login />\n          </Router>\n        </Provider>\n      );\n      //console.log(wrapper.debug());\n      wrapper.find(\".login_btn\").simulate(\"click\");\n      // expect(loginUser.calledOnce).toBe(true);\n      //   expect(loginUser.calledOnce);\n      expect(wrapper.find(\".form-control\").simulate(\"change\"));\n    });\n  });\n});\n"]}
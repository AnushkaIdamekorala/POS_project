{"version":3,"sources":["itemActions.test.js"],"names":["middlewares","thunk","mockStore","describe","beforeEach","moxios","install","afterEach","uninstall","test","expectedArray","_id","itm","name","productCode","price","description","availableCount","__v","count","wait","request","requests","mostRecent","respondWith","status","response","expectedActions","type","types","ITEMS_LOADING","payload","GET_ITEMS","store","items","loading","dispatch","actions","getItems","then","getActions","toEqual","ADD_ITEM","item","available","addItem","id","DELETE_ITEM","deleteItem","setItemsLoading"],"mappings":"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","sourcesContent":["import configureMockStore from \"redux-mock-store\";\nimport thunk from \"redux-thunk\";\nimport * as actions from \"./itemActions\";\nimport * as types from \"./types\";\nimport expect from \"expect\";\nimport regeneratorRuntime from \"regenerator-runtime\";\nimport moxios from \"moxios\";\n\nconst middlewares = [thunk];\nconst mockStore = configureMockStore(middlewares);\n\ndescribe(\"getItems itemActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    const expectedArray = [\n      {\n        _id: \"5c6e3f2ccd583f2bd04e55cc\",\n        itm: {\n          _id: \"5c67bb90f004c93ecd7006bf\",\n          name: \"Coke\",\n          productCode: 2,\n          price: 100,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 500,\n          __v: 0\n        },\n        count: 1\n      },\n      {\n        _id: \"5c6e3fbc461b152d009ba691\",\n        itm: {\n          _id: \"5c67bd07f004c93ecd7006c6\",\n          name: \"Ice Cream\",\n          productCode: 9,\n          price: 120,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 170,\n          __v: 0\n        },\n        count: 1\n      },\n      {\n        _id: \"5c6e5d167d83b649d32e3c0c\",\n        itm: {\n          _id: \"5c67bbc7f004c93ecd7006c0\",\n          name: \"Apple\",\n          productCode: 3,\n          price: 80,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 600,\n          __v: 0\n        },\n        count: 4\n      },\n      {\n        _id: \"5c6fce27dedd73364924ed67\",\n        itm: {\n          _id: \"5c67bc01f004c93ecd7006c2\",\n          name: \"Milk\",\n          productCode: 5,\n          price: 200,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 400,\n          __v: 0\n        },\n        count: 4\n      },\n      {\n        _id: \"5c7379de4316081c7de67208\",\n        itm: {\n          _id: \"5c67bc28f004c93ecd7006c3\",\n          name: \"Cheese\",\n          productCode: 6,\n          price: 350,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 70,\n          __v: 0\n        },\n        count: 1\n      }\n    ];\n\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n      request.respondWith({\n        status: 200,\n        response: expectedArray\n      });\n    });\n\n    const expectedActions = [\n      { type: types.ITEMS_LOADING },\n      {\n        payload: expectedArray,\n        type: types.GET_ITEMS\n      }\n    ];\n\n    const store = mockStore({\n      items: [],\n      loading: false\n    });\n\n    return store.dispatch(actions.getItems()).then(() => {\n      // return of async actions\n      expect(store.getActions()).toEqual(expectedActions);\n    });\n  });\n});\n\ndescribe(\"addItem itemActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    const expectedArray = [\n      {\n        _id: \"5c6e3f2ccd583f2bd04e55cc\",\n        itm: {\n          _id: \"5c67bb90f004c93ecd7006bf\",\n          name: \"Coke\",\n          productCode: 2,\n          price: 100,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 500,\n          __v: 0\n        },\n        count: 1\n      },\n      {\n        _id: \"5c6e3fbc461b152d009ba691\",\n        itm: {\n          _id: \"5c67bd07f004c93ecd7006c6\",\n          name: \"Ice Cream\",\n          productCode: 9,\n          price: 120,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 170,\n          __v: 0\n        },\n        count: 1\n      },\n      {\n        _id: \"5c6e5d167d83b649d32e3c0c\",\n        itm: {\n          _id: \"5c67bbc7f004c93ecd7006c0\",\n          name: \"Apple\",\n          productCode: 3,\n          price: 80,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 600,\n          __v: 0\n        },\n        count: 4\n      },\n      {\n        _id: \"5c6fce27dedd73364924ed67\",\n        itm: {\n          _id: \"5c67bc01f004c93ecd7006c2\",\n          name: \"Milk\",\n          productCode: 5,\n          price: 200,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 400,\n          __v: 0\n        },\n        count: 4\n      },\n      {\n        _id: \"5c7379de4316081c7de67208\",\n        itm: {\n          _id: \"5c67bc28f004c93ecd7006c3\",\n          name: \"Cheese\",\n          productCode: 6,\n          price: 350,\n          description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec iaculis metus dolor, at mollis \",\n          availableCount: 70,\n          __v: 0\n        },\n        count: 1\n      }\n    ];\n\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n      request.respondWith({\n        status: 200,\n        response: expectedArray\n      });\n    });\n\n    const expectedActions = [\n      {\n        payload: expectedArray,\n        type: types.ADD_ITEM\n      }\n    ];\n\n    const store = mockStore({\n      items: [],\n      loading: false\n    });\n    let item = { name: \"Tea\", available: 1000, price: 28 };\n\n    return store.dispatch(actions.addItem(item)).then(() => {\n      // return of async actions\n      expect(store.getActions()).toEqual(expectedActions);\n    });\n  });\n});\n\ndescribe(\"deleteItem itemActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n      request.respondWith({\n        status: 204\n      });\n    });\n    let id = \"345245a5b54f54d4ce\";\n\n    const expectedActions = [\n      {\n        payload: id,\n        type: types.DELETE_ITEM\n      }\n    ];\n\n    const store = mockStore({\n      items: [],\n      loading: false\n    });\n    let item = { name: \"Tea\", available: 1000, price: 28 };\n\n    return store.dispatch(actions.deleteItem(id)).then(() => {\n      // return of async actions\n      expect(store.getActions()).toEqual(expectedActions);\n    });\n  });\n});\n\ndescribe(\"setItemsLoading itemActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n\n      const expectedActions = [\n        {\n          type: types.ITEMS_LOADING\n        }\n      ];\n\n      const store = mockStore({\n        items: [],\n        loading: false\n      });\n      return store.dispatch(actions.setItemsLoading()).then(() => {\n        // return of async actions\n        expect(store.getActions()).toEqual(expectedActions);\n      });\n    });\n  });\n});\n"]}
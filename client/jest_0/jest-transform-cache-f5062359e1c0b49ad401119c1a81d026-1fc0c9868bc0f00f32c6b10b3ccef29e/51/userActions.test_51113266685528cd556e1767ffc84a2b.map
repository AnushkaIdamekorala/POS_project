{"version":3,"sources":["userActions.test.js"],"names":["middlewares","thunk","mockStore","describe","beforeEach","moxios","install","afterEach","uninstall","test","expectedJson","success","wait","request","requests","mostRecent","respondWith","status","response","expectedActions","payload","type","types","USER_LOGIN","store","isAuthenticated","cartSet","isAuthFailed","isSignFail","isSignWell","details","username","password","dispatch","actions","loginUser","then","getActions","toEqual","USER_SIGN_OUT","signOutUser","AUTH_CHECK","checkAuth","id","REMOVE_CART","removeCart","USER_SIGNUP","signupUser"],"mappings":"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","sourcesContent":["import configureMockStore from \"redux-mock-store\";\nimport thunk from \"redux-thunk\";\nimport * as actions from \"./userActions\";\nimport * as types from \"./types\";\nimport expect from \"expect\";\nimport regeneratorRuntime from \"regenerator-runtime\";\nimport moxios from \"moxios\";\n\nconst middlewares = [thunk];\nconst mockStore = configureMockStore(middlewares);\n\ndescribe(\"loginUser userActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    let expectedJson = { success: true };\n\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n      request.respondWith({\n        status: 200,\n        response: expectedJson\n      });\n    });\n\n    const expectedActions = [\n      {\n        payload: expectedJson,\n        type: types.USER_LOGIN\n      }\n    ];\n\n    const store = mockStore({\n      isAuthenticated: false,\n      cartSet: [],\n      isAuthFailed: false,\n      isSignFail: false,\n      isSignWell: false\n    });\n\n    let details = { username: \"test@test.com\", password: \"1234\" };\n\n    return store.dispatch(actions.loginUser(details)).then(() => {\n      // return of async actions\n      expect(store.getActions()).toEqual(expectedActions);\n    });\n  });\n});\n\ndescribe(\"signOutUser userActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    let expectedJson = { success: true };\n\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n      request.respondWith({\n        status: 200,\n        response: expectedJson\n      });\n    });\n\n    const expectedActions = [\n      {\n        payload: expectedJson,\n        type: types.USER_SIGN_OUT\n      }\n    ];\n\n    const store = mockStore({\n      isAuthenticated: false,\n      cartSet: [],\n      isAuthFailed: false,\n      isSignFail: false,\n      isSignWell: false\n    });\n\n    return store.dispatch(actions.signOutUser()).then(() => {\n      // return of async actions\n      expect(store.getActions()).toEqual(expectedActions);\n    });\n  });\n});\n\ndescribe(\"checkAuth userActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    let expectedJson = { success: true };\n\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n      request.respondWith({\n        status: 200,\n        response: expectedJson\n      });\n    });\n\n    const expectedActions = [\n      {\n        payload: expectedJson.success,\n        type: types.AUTH_CHECK\n      }\n    ];\n\n    const store = mockStore({\n      isAuthenticated: false,\n      cartSet: [],\n      isAuthFailed: false,\n      isSignFail: false,\n      isSignWell: false\n    });\n\n    return store.dispatch(actions.checkAuth()).then(() => {\n      // return of async actions\n      expect(store.getActions()).toEqual(expectedActions);\n    });\n  });\n});\n\ndescribe(\"removeCart userActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    let expectedJson = { success: true };\n\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n      request.respondWith({\n        status: 200,\n        response: expectedJson\n      });\n    });\n\n    let id = \"2423a3c3b3de23ab32\";\n\n    const expectedActions = [\n      {\n        payload: id,\n        type: types.REMOVE_CART\n      }\n    ];\n\n    const store = mockStore({\n      isAuthenticated: false,\n      cartSet: [],\n      isAuthFailed: false,\n      isSignFail: false,\n      isSignWell: false\n    });\n\n    return store.dispatch(actions.removeCart(id)).then(() => {\n      // return of async actions\n      expect(store.getActions()).toEqual(expectedActions);\n    });\n  });\n});\n\ndescribe(\"signupUser userActions\", () => {\n  beforeEach(function() {\n    moxios.install();\n  });\n\n  afterEach(function() {\n    moxios.uninstall();\n  });\n\n  test(\"correctly\", () => {\n    let expectedJson = { success: true };\n\n    moxios.wait(() => {\n      const request = moxios.requests.mostRecent();\n      request.respondWith({\n        status: 200,\n        response: expectedJson\n      });\n    });\n\n    const expectedActions = [\n      {\n        payload: expectedJson,\n        type: types.USER_SIGNUP\n      }\n    ];\n\n    const store = mockStore({\n      isAuthenticated: false,\n      cartSet: [],\n      isAuthFailed: false,\n      isSignFail: false,\n      isSignWell: false\n    });\n    let details = { username: \"test@test.com\", password: \"1234\" };\n\n    return store.dispatch(actions.signupUser(details)).then(() => {\n      // return of async actions\n      expect(store.getActions()).toEqual(expectedActions);\n    });\n  });\n});\n"]}